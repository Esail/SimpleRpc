// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calculate.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "calculate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CalcRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CalcRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CalcResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CalcResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_calculate_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_calculate_2eproto() {
  protobuf_AddDesc_calculate_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "calculate.proto");
  GOOGLE_CHECK(file != NULL);
  CalcRequest_descriptor_ = file->message_type(0);
  static const int CalcRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalcRequest, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalcRequest, b_),
  };
  CalcRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CalcRequest_descriptor_,
      CalcRequest::internal_default_instance(),
      CalcRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CalcRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalcRequest, _internal_metadata_));
  CalcResponse_descriptor_ = file->message_type(1);
  static const int CalcResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalcResponse, result_),
  };
  CalcResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CalcResponse_descriptor_,
      CalcResponse::internal_default_instance(),
      CalcResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CalcResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalcResponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_calculate_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CalcRequest_descriptor_, CalcRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CalcResponse_descriptor_, CalcResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_calculate_2eproto() {
  CalcRequest_default_instance_.Shutdown();
  delete CalcRequest_reflection_;
  CalcResponse_default_instance_.Shutdown();
  delete CalcResponse_reflection_;
}

void protobuf_InitDefaults_calculate_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  CalcRequest_default_instance_.DefaultConstruct();
  CalcResponse_default_instance_.DefaultConstruct();
  CalcRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CalcResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_calculate_2eproto_once_);
void protobuf_InitDefaults_calculate_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_calculate_2eproto_once_,
                 &protobuf_InitDefaults_calculate_2eproto_impl);
}
void protobuf_AddDesc_calculate_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_calculate_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017calculate.proto\"#\n\013CalcRequest\022\t\n\001a\030\001 "
    "\001(\005\022\t\n\001b\030\002 \001(\005\"\036\n\014CalcResponse\022\016\n\006result"
    "\030\001 \001(\005b\006proto3", 94);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "calculate.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_calculate_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_calculate_2eproto_once_);
void protobuf_AddDesc_calculate_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_calculate_2eproto_once_,
                 &protobuf_AddDesc_calculate_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_calculate_2eproto {
  StaticDescriptorInitializer_calculate_2eproto() {
    protobuf_AddDesc_calculate_2eproto();
  }
} static_descriptor_initializer_calculate_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalcRequest::kAFieldNumber;
const int CalcRequest::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalcRequest::CalcRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_calculate_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CalcRequest)
}

void CalcRequest::InitAsDefaultInstance() {
}

CalcRequest::CalcRequest(const CalcRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CalcRequest)
}

void CalcRequest::SharedCtor() {
  ::memset(&a_, 0, reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&a_) + sizeof(b_));
  _cached_size_ = 0;
}

CalcRequest::~CalcRequest() {
  // @@protoc_insertion_point(destructor:CalcRequest)
  SharedDtor();
}

void CalcRequest::SharedDtor() {
}

void CalcRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalcRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CalcRequest_descriptor_;
}

const CalcRequest& CalcRequest::default_instance() {
  protobuf_InitDefaults_calculate_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CalcRequest> CalcRequest_default_instance_;

CalcRequest* CalcRequest::New(::google::protobuf::Arena* arena) const {
  CalcRequest* n = new CalcRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CalcRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CalcRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CalcRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(a_, b_);

#undef ZR_HELPER_
#undef ZR_

}

bool CalcRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CalcRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_b;
        break;
      }

      // optional int32 b = 2;
      case 2: {
        if (tag == 16) {
         parse_b:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CalcRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CalcRequest)
  return false;
#undef DO_
}

void CalcRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CalcRequest)
  // optional int32 a = 1;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional int32 b = 2;
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->b(), output);
  }

  // @@protoc_insertion_point(serialize_end:CalcRequest)
}

::google::protobuf::uint8* CalcRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CalcRequest)
  // optional int32 a = 1;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional int32 b = 2;
  if (this->b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->b(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CalcRequest)
  return target;
}

size_t CalcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CalcRequest)
  size_t total_size = 0;

  // optional int32 a = 1;
  if (this->a() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  // optional int32 b = 2;
  if (this->b() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalcRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CalcRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CalcRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalcRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CalcRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CalcRequest)
    UnsafeMergeFrom(*source);
  }
}

void CalcRequest::MergeFrom(const CalcRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CalcRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CalcRequest::UnsafeMergeFrom(const CalcRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.a() != 0) {
    set_a(from.a());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
}

void CalcRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CalcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalcRequest::CopyFrom(const CalcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CalcRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CalcRequest::IsInitialized() const {

  return true;
}

void CalcRequest::Swap(CalcRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalcRequest::InternalSwap(CalcRequest* other) {
  std::swap(a_, other->a_);
  std::swap(b_, other->b_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalcRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CalcRequest_descriptor_;
  metadata.reflection = CalcRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CalcRequest

// optional int32 a = 1;
void CalcRequest::clear_a() {
  a_ = 0;
}
::google::protobuf::int32 CalcRequest::a() const {
  // @@protoc_insertion_point(field_get:CalcRequest.a)
  return a_;
}
void CalcRequest::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:CalcRequest.a)
}

// optional int32 b = 2;
void CalcRequest::clear_b() {
  b_ = 0;
}
::google::protobuf::int32 CalcRequest::b() const {
  // @@protoc_insertion_point(field_get:CalcRequest.b)
  return b_;
}
void CalcRequest::set_b(::google::protobuf::int32 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:CalcRequest.b)
}

inline const CalcRequest* CalcRequest::internal_default_instance() {
  return &CalcRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalcResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalcResponse::CalcResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_calculate_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CalcResponse)
}

void CalcResponse::InitAsDefaultInstance() {
}

CalcResponse::CalcResponse(const CalcResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CalcResponse)
}

void CalcResponse::SharedCtor() {
  result_ = 0;
  _cached_size_ = 0;
}

CalcResponse::~CalcResponse() {
  // @@protoc_insertion_point(destructor:CalcResponse)
  SharedDtor();
}

void CalcResponse::SharedDtor() {
}

void CalcResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalcResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CalcResponse_descriptor_;
}

const CalcResponse& CalcResponse::default_instance() {
  protobuf_InitDefaults_calculate_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CalcResponse> CalcResponse_default_instance_;

CalcResponse* CalcResponse::New(::google::protobuf::Arena* arena) const {
  CalcResponse* n = new CalcResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CalcResponse)
  result_ = 0;
}

bool CalcResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CalcResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CalcResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CalcResponse)
  return false;
#undef DO_
}

void CalcResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CalcResponse)
  // optional int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:CalcResponse)
}

::google::protobuf::uint8* CalcResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CalcResponse)
  // optional int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CalcResponse)
  return target;
}

size_t CalcResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CalcResponse)
  size_t total_size = 0;

  // optional int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalcResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CalcResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CalcResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalcResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CalcResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CalcResponse)
    UnsafeMergeFrom(*source);
  }
}

void CalcResponse::MergeFrom(const CalcResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CalcResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CalcResponse::UnsafeMergeFrom(const CalcResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CalcResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CalcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalcResponse::CopyFrom(const CalcResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CalcResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CalcResponse::IsInitialized() const {

  return true;
}

void CalcResponse::Swap(CalcResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalcResponse::InternalSwap(CalcResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalcResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CalcResponse_descriptor_;
  metadata.reflection = CalcResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CalcResponse

// optional int32 result = 1;
void CalcResponse::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 CalcResponse::result() const {
  // @@protoc_insertion_point(field_get:CalcResponse.result)
  return result_;
}
void CalcResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CalcResponse.result)
}

inline const CalcResponse* CalcResponse::internal_default_instance() {
  return &CalcResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
